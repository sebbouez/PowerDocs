import{_ as a,r as i,o,c as r,d as n,b as e,a as c,e as s}from"./app-41779d21.js";const l={},p=s('<h1 id="methods-in-powerdocsextension" tabindex="-1"><a class="header-anchor" href="#methods-in-powerdocsextension" aria-hidden="true">#</a> Methods in PowerDocsExtension</h1><h2 id="registerblockrenderer-string-string-function" tabindex="-1"><a class="header-anchor" href="#registerblockrenderer-string-string-function" aria-hidden="true">#</a> registerBlockRenderer(string, string, function)</h2><p>This method is used to create custom markdown renderers.</p><h3 id="arguments" tabindex="-1"><a class="header-anchor" href="#arguments" aria-hidden="true">#</a> Arguments</h3><ul><li><code>string</code>: The name of the custom renderer</li><li><code>string</code>: The identifier to be used in Markdown to enter the custom renderer</li><li><code>function</code>: The function to be called when the compiler will parse this kind of block, it must return a <code>string</code></li></ul><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3>',6),d=n("br",null,null,-1),u={href:"https://github.com/sebbouez/PowerDocs/tree/main/extensions/swagger-methods",target:"_blank",rel:"noopener noreferrer"},m=s(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>

<span class="token keyword">function</span> <span class="token function">renderSwaggerMethod</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// the &quot;arg&quot; argument will contain the HTTP method</span>
    <span class="token comment">// the markdown block will look like this:</span>
    <span class="token comment">// ::: swagger-method GET</span>
    <span class="token comment">// </span>
    <span class="token comment">// :::</span>

    <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token string">&quot;&lt;div class=&#39;swagger-method http-method-&quot;</span> <span class="token operator">+</span> arg <span class="token operator">+</span> <span class="token string">&quot;&#39;&gt;&quot;</span><span class="token punctuation">;</span>
    html <span class="token operator">+=</span> <span class="token string">&quot;&lt;span class=&#39;leftPart&#39;&gt;&quot;</span> <span class="token operator">+</span> arg <span class="token operator">+</span> <span class="token string">&quot;&lt;/span&gt;&quot;</span><span class="token punctuation">;</span>
    html <span class="token operator">+=</span> <span class="token string">&quot;&lt;span class=&#39;rightPart&#39;&gt;@content&lt;/span&gt;&quot;</span><span class="token punctuation">;</span>
    html <span class="token operator">+=</span> <span class="token string">&quot;&lt;/div&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> html<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

ext<span class="token punctuation">.</span><span class="token function">registerBlockRenderer</span><span class="token punctuation">(</span><span class="token string">&quot;Swagger method block&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swagger-method&quot;</span><span class="token punctuation">,</span> renderSwaggerMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerlanguagedictionary-string-string-string" tabindex="-1"><a class="header-anchor" href="#registerlanguagedictionary-string-string-string" aria-hidden="true">#</a> registerLanguageDictionary(string, string, string)</h2><p>This method is used to add language dictionaries to PowerDocs to enable spell checker features.</p><h2 id="registerstylesheet-string-string" tabindex="-1"><a class="header-anchor" href="#registerstylesheet-string-string" aria-hidden="true">#</a> registerStyleSheet(string, string)</h2><p>This method is used to add custom style sheets to the markdown renderer.</p><h2 id="registertemplate-string-string-function" tabindex="-1"><a class="header-anchor" href="#registertemplate-string-string-function" aria-hidden="true">#</a> registerTemplate(string, string, function)</h2><p>This method is used to register a piece of content that can be included easily using the CTRL+SPACE keys.</p><h3 id="arguments-1" tabindex="-1"><a class="header-anchor" href="#arguments-1" aria-hidden="true">#</a> Arguments</h3><ul><li><code>string</code>: The name of the template</li><li><code>string</code>: A description of the template</li><li><code>function</code>: The function to be called to generate the template, it must return a <code>string</code></li></ul><h3 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example</h3><p>This example will register a template to generate Lorem Ipsum text.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>

<span class="token keyword">function</span> <span class="token function">returnCustomTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token string">&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc a orci nec ligula sodales fermentum quis non turpis. Pellentesque vehicula mattis porttitor. Sed sed elit ante. Ut tempus placerat justo. Integer id consequat justo, nec cursus eros. Phasellus vestibulum sit amet ipsum nec elementum.&quot;</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

ext<span class="token punctuation">.</span><span class="token function">registerTemplate</span><span class="token punctuation">(</span><span class="token string">&quot;Lorem ipsum&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Writes some lorem ipsum dummy text&quot;</span><span class="token punctuation">,</span> returnCustomTemplate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function h(g,k){const t=i("ExternalLinkIcon");return o(),r("div",null,[p,n("p",null,[e("This code snippet is taken from this extension:"),d,n("a",u,[e("https://github.com/sebbouez/PowerDocs/tree/main/extensions/swagger-methods"),c(t)])]),m])}const b=a(l,[["render",h],["__file","extension-methods.html.vue"]]);export{b as default};
