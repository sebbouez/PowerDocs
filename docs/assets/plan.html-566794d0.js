import{_ as n,r as a,o as s,c as o,d as l,a as p,w as i,b as c,e as t}from"./app-7fd83abc.js";const r={},u=t(`<h1 id="output-plan-schema" tabindex="-1"><a class="header-anchor" href="#output-plan-schema" aria-hidden="true">#</a> Output Plan schema</h1><p>We call <strong>Plan</strong> the file that defines the table of content of the output PDF document or static website.<br> The <strong>Plan</strong> file is a YAML file called &quot;toc.yml&quot;. It is created by default when you start a new project in PowerDocs.<br> When you open this file in the application, a dedicated visual editor will open instead of the code editor. If you prefer to edit YAML directly, you can <strong>right click</strong> on the file in the <strong>project explorer</strong> panel and select <strong>Open in text editor</strong>.</p><blockquote><p><strong>Please note</strong>: The generic code editor does not offer the same level of functionalities that the md one for the moment.</p></blockquote><p>Default schema:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">type</span><span class="token punctuation">:</span> PdfDocument
<span class="token key atrule">style</span><span class="token punctuation">:</span> 
<span class="token key atrule">content</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> Titre du document
  <span class="token key atrule">template</span><span class="token punctuation">:</span> templates/mycover.tpl  
  <span class="token key atrule">type</span><span class="token punctuation">:</span> Cover
<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> Chapter title
  <span class="token key atrule">type</span><span class="token punctuation">:</span> Chapter
  <span class="token key atrule">content</span><span class="token punctuation">:</span> 
    <span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> topic 1
      <span class="token key atrule">template</span><span class="token punctuation">:</span> mytopic1.md  
      <span class="token key atrule">type</span><span class="token punctuation">:</span> Topic
<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> topic 2
    <span class="token key atrule">template</span><span class="token punctuation">:</span> mytopic2.md  
    <span class="token key atrule">type</span><span class="token punctuation">:</span> Topic
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),d=t('<h2 id="supported-types-of-items-in-plan" tabindex="-1"><a class="header-anchor" href="#supported-types-of-items-in-plan" aria-hidden="true">#</a> Supported types of items in Plan</h2><p>This table shows the list of supported values for the <strong>type</strong> property:</p><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td>Cover</td><td>Document main cover page.</td></tr><tr><td>Toc</td><td>Automatic table of content generated using the Plan file. Not customizable for the moment.</td></tr><tr><td>Chapter</td><td>Represents a chapter, it can contain sub content, it will display a special cover page in the PDF output file. Use it to create submenus when output is static website.</td></tr><tr><td>Topic</td><td>Used to append the content of a markdown file to the output document. It does not necessarily represent a page when using a PDF output. When using a static website output, each markdown file will be compiled to one HTML file.</td></tr></tbody></table>',3);function h(m,k){const e=a("RouterLink");return s(),o("div",null,[u,l("p",null,[p(e,{to:"/pdf/cover-template.html"},{default:i(()=>[c("Read this article to learn more about how to create your custom templates for the Cover page and for Chapters.")]),_:1})]),d])}const f=n(r,[["render",h],["__file","plan.html.vue"]]);export{f as default};
